[project]
name = "pdf-vector-system"
dynamic = ["version"]
description = "A comprehensive PDF content processing and vector storage system with ChromaDB integration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "The Augster", email = "augster@example.com"}
]
maintainers = [
    {name = "The Augster", email = "augster@example.com"}
]
keywords = ["pdf", "vector", "embeddings", "chromadb", "nlp", "search", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "pymupdf>=1.23.0,<2.0.0",
    "chromadb>=0.4.0,<1.0.0",
    "sentence-transformers>=2.2.0,<3.0.0",
    "openai>=1.0.0,<2.0.0",
    "langchain-text-splitters>=0.0.1,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "loguru>=0.7.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "rich>=13.0.0,<14.0.0",
    "typer>=0.9.0,<1.0.0",
    "numpy>=1.24.0,<2.0.0",
    "tqdm>=4.65.0,<5.0.0",
    "pyside6>=6.9.2",
    "psutil>=7.1.0",
    "cohere>=4.0.0,<6.0.0",
    "transformers>=4.21.0,<5.0.0",
    "torch>=2.0.0,<3.0.0",
    "tensorflow>=2.13.0,<3.0.0",
    "tensorflow-hub>=0.15.0,<1.0.0",
    "pyside6-fluent-widgets>=1.8.7",
]

[project.urls]
Homepage = "https://github.com/your-username/pdf-vector-system"
Documentation = "https://pdf-vector-system.readthedocs.io/"
Repository = "https://github.com/your-username/pdf-vector-system.git"
"Bug Tracker" = "https://github.com/your-username/pdf-vector-system/issues"
Changelog = "https://github.com/your-username/pdf-vector-system/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<6.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
    "black>=23.0.0,<25.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "ruff>=0.1.0,<1.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.3.0,<4.0.0",
    "types-requests>=2.32.0",
    "types-setuptools>=80.0.0",
]
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
    "mkdocstrings[python]>=0.24.0,<1.0.0",
    "mkdocs-gen-files>=0.5.0,<1.0.0",
    "mkdocs-literate-nav>=0.6.0,<1.0.0",
    "mkdocs-section-index>=0.3.0,<1.0.0",
]
test = [
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<6.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
]
lint = [
    "black>=23.0.0,<25.0.0",
    "isort>=5.12.0,<6.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.5.0,<2.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.3.0,<4.0.0",
]

[project.scripts]
pdf-vector = "pdf_vector_system.cli:main"
pdf-vector-gui = "pdf_vector_system.gui_main:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "pdf_vector_system/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["pdf_vector_system"]

[tool.hatch.build.targets.sdist]
include = [
    "/pdf_vector_system",
    "/tests",
    "/examples",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
    "/pyproject.toml",
]
exclude = [
    "/.github",
    "/docs",
    "/.gitignore",
    "/.pre-commit-config.yaml",
    "/chroma_db",
    "**/__pycache__",
    "**/*.pyc",
    "**/*.pyo",
    "**/*.pyd",
    "**/.pytest_cache",
    "**/.mypy_cache",
    "**/.coverage",
    "**/htmlcov",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["pdf_vector_system", "tests"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "sentence_transformers.*",
    "fitz.*",
    "langchain_text_splitters.*",
]
ignore_missing_imports = true

# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RUF", # Ruff-specific rules
    "S", # flake8-bandit
    "T20", # flake8-print
    "YTT", # flake8-2020
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PD901",  # avoid using the generic variable name df for DataFrames
]
unfixable = [
    "ERA001", # commented-out-code
]
src = ["pdf_vector_system", "tests"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.ruff.isort]
known-first-party = ["pdf_vector_system"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pyupgrade]
keep-runtime-typing = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pdf_vector_system",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--junitxml=reports/junit.xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: Integration tests that test component interactions",
    "slow: Tests that take a long time to run",
    "external: Tests that require external dependencies (APIs, databases)",
    "unit: Unit tests (default)",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:chromadb.*",
    "ignore::UserWarning:sentence_transformers.*",
]

# Coverage configuration
[tool.coverage.run]
source = ["pdf_vector_system"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "pdf_vector_system/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
    "pytest-qt>=4.5.0",
    "types-requests>=2.32.4.20250913",
]
